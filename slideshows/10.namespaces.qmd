---
title: "Pour en finir avec les espaces de nommage"
title-slide-attributes:
  data-background-color: "#002f2f"
author: "Alexandre Roulois (Université Paris-Cité, IRIF, CNRS)"
format:
  pdf:
    toc: true
  revealjs:
    slide-number: true
    show-slide-number: all
    smaller: true
    scrollable: true
    theme: showcase.scss
---

## De l’ambiguïté

Énoncés ambigus :

(1) Le chewing-gum reste collé au fond du palais.  
(2) Il s’est mangé un pain.  
(3) J’en ai assez des avocats !

Ambiguïtés lexicales homographiques :

(1) *palais* : organe ou édifice ?  
(2) *pain* : coup de poing ou aliment ?  
(3) *avocat* : fruit ou personne ?

Cerveau habile pour désambiguïser, compliqué pour informatique

## De la personnalisation des éléments

XML permet de définir vocabulaires personnalisés

Solenn et Yvonnig décrivent objet *Le Cid* de Corneille :

:::: {.columns}

::: {.column}
```xml
<!-- Solenn -->
<book>
  <title>Le Cid</title>
  <author>Corneille</author>
</book>
```
:::

::: {.column}
```xml
<!-- Yvonnig -->
<theatre>
  <play>Le Cid</play>
  <author>
    <firstname>Pierre</firstname>
    <lastname>Corneille</lastname>
  </author>
</theatre>
```
:::

::::

Plus tard, leurs formats de description font autorité

Rendus publiques et disponibles à deux adresses :

```xml
<!-- Solenn vocabulary -->
http://sowebsite.fr/formatdeso

<!-- Yvonnig vocabulary -->
http://yvowebsite.fr/formatdeyvo
```

## De la référence à un vocabulaire

Soazig utilise le vocabulaire de Solenn :

```xml
<book xmlns="http://sowebsite.fr/formatdeso">
  <title>Palafox</title>
  <author>Éric Chevillard</author>
</book>
```

**xmlns :** *XML Namespace* (espace de nommage XML)

- attribut
- valeur sous forme URL
- déclare vocabulaire utilisé

Éléments `book` `title` `author` de Soazig suivent les règles de Solenn

## De la référence à plusieurs vocabulaires

Soazig souhaite améliorer la description de son objet en faisant référence aux vocabulaires de Solenn et Yvonnig :

```xml
<book xmlns="http://sowebsite.fr/formatdeso"
      xmlns="http://yvowebsite.fr/formatdeyvo">
  <title>Palafox</title>
  <author>
    <firstname>Éric</firstname>
    <lastname>Chevillard</lastname>
  </author>
</book>
```

**Problème :** formats référencés mais collision entre `author` de Solenn et `author` de Yvonnig

- éléments de même nom
- significations différentes !

## De la désambiguïsation

**Solution :** ajouter étiquette pour rattacher élément à son format de référence

```xml
<!-- Using namespaces -->
<so:book  xmlns:so="http://sowebsite.fr/formatdeso"
          xmlns:yvo="http://yvowebsite.fr/formatdeyvo">
  <so:title>Palafox</so:title>
  <yvo:author>
    <yvo:firstname>Éric</yvo:firstname>
    <yvo:lastname>Chevillard</yvo:lastname>
  </yvo:author>
</so:book>
```
- `so:` préfixe du vocabulaire de Solenn
- `yvo:` préfixe du vocabulaire de Yvonnig
- `book` `title` font référence à `so:`
- `author` `firstname` `lastname` font référence à `yvo:`

## Du principe d’héritage

*Namespace* actif pour élément `+` descendants

Préfixe inutile si aucune ambiguïté :

:::: {.columns}

::: {.column}
```xml
<!-- With préfix -->
<so:book xmlns:so="http://sowebsite.fr/formatdeso">
  <so:title>Palafox</so:title>
  <so:author>Éric Chevillard</so:author>
</so:book>
```
:::

::: {.column}
```xml
<!-- Without prefix -->
<book xmlns="http://sowebsite.fr/formatdeso">
  <title>Palafox</title>
  <author>Éric Chevillard</author>
</book>
```
:::

::::

## De la portée

:::: {.columns}

::: {.column}
```xml
<book xmlns="http://sowebsite.fr/formatdeso">
  <title>Palafox</tite>
  <author>Éric Chevillard</author>
</book>
```
:::

::: {.column .text-center}
```{mermaid}
graph TD;
  subgraph scope ["Éléments à portée de l'espace de nommage"]
    direction TB
    A[book]:::tag --> B[author]:::tag
    A --> C[title]:::tag  
    A --> D[xmlns]:::attribute
  end

  classDef attribute fill:#f96,stroke:white
  classDef tag fill:white,stroke:#f96
  style scope fill:#f0e68c,stroke-dasharray: 5 5,stroke:#f96,stroke-width:2px,color:#000

```
:::

::::

:::: {.columns}

::: {.column}
```xml
<library>
  <book xmlns="http://sowebsite.fr/formatdeso">
    <title>Palafox</title>
    <author>Éric Chevillard</auteur>
  </book>
  <book>
    <title>Le Cid</title>
    <auteur>Corneille</auteur>
  </book>
</library>
```
:::

::: {.column}
```{mermaid}
graph TD;
  A[Library]:::tag --> B[book]:::tag
  A --> C[book]:::tag
  C --> F[author]:::tag
  C --> G[title]:::tag  

  subgraph xmlns_scope ["Éléments à portée de l'espace de nommage"]
    direction TB
    B --> D[author]:::tag
    B --> E[title]:::tag
    B --> H[xmlns]:::attribute
  end

  classDef attribute fill:#f96,stroke:white
  classDef tag fill:white,stroke:#f96
  style xmlns_scope fill:#f0e68c,stroke-dasharray: 5 5,stroke:#f96,stroke-width:2px,color:#000
```
:::

::::

---

Écriture simplifiée selon le principe d’héritage :

```xml
<!-- 'book' and 'title' refer to Solenn vocabulary -->
<book xmlns="http://sowebsite.fr/formatdeso">
  <title>Palafox</title>
  <!-- Yvonnig's vocabulary instead of Solenn's for describing author and descendants -->
  <author xmlns="http://yvowebsite.fr/formatdeyvo">
    <firstname>Éric</firstname>
    <lastname>Chevillard</lastname>
  </author>
</book>
```

Dans la pratique, intéressant de dissocier visuellement les éléments qui appartiennent à l’un ou l’autre des *namespaces* :

```xml
<!-- Two namespaces: elements without prefix refer to Solenn's vocabulary -->
<book xmlns="http://sowebsite.fr/formatdeso"
      xmlns:yvo="http://yvowebsite.fr/formatdeyvo">
  <title>Palafox</title>
  <!-- Elements with prefix refer to Yvonnig's vocabulary -->
  <yvo:author>
    <yvo:firstname>Éric</yvo:firstname>
    <yvo:lastname>Chevillard</yvo:lastname>
  </yvo:author>
</book>
```

---

Et il est encore préférable de qualifier tous les éléments :

```xml
<so:book  xmlns:so="http://sowebsite.fr/formatdeso"
          xmlns:yvo="http://yvowebsite.fr/formatdeyvo">
  <so:title>Palafox</so:title>
  <yvo:author>
    <yvo:firstname>Éric</yvo:firstname>
    <yvo:lastname>Chevillard</yvo:lastname>
  </yvo:author>
</so:book>
```

## Des espaces de nommage célèbres

**XHTML :** http://www.w3.org/1999/xhtml

**MathML :** http://www.w3.org/1998/Math/MathML

**XSL :** http://www.w3.org/1999/XSL/Transform

**XSD :** http://www.w3.org/2001/XMLSchema-instance

**XLink :** http://www.w3.org/1999/xlink

**SVG :** http://www.w3.org/2000/svg

**TEI :** http://www.tei-c.org/ns/1.0

**RDF :** http://www.w3.org/1999/02/22-rdf-syntax-ns#

**OWL :** http://www.w3.org/2002/07/owl#

**Dublin Core :** http://purl.org/dc/elements/1.1/

## Des exemples concrets

### MathML

```xml
<!DOCTYPE html>
<html lang="fr"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:m="http://www.w3.org/1998/Math/MathML">
<head>
  <meta charset="utf-8" />
  <title>Formule de calcul de la vitesse</title>
</head>
<body>
  <h1>Formule de calcul de la vitesse</h1>
  <m:math>
    <m:mi>v</m:mi>
    <m:mo>=</m:mo>
    <m:frac>
      <m:mi>d</m:mi>
      <m:mn>t</m:mn>
    </m:frac>
  </m:math>
</body>
</html>
```

---

### RDF

```xml
<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:foaf="http://xmlns.com/foaf/0.1/"
         xmlns:dc="http://purl.org/dc/elements/1.1/"
         xmlns:sch="http://schema.org/"
         xmlns:ex="http://example.org#">

  <!-- A person with FOAF -->
  <foaf:Person rdf:about="ex:JohnDoe">
    <foaf:name>John Doe</foaf:name>
    <foaf:mbox rdf:resource="mailto:johndoe@example.com"/>
    <foaf:homepage rdf:resource="http://www.johndoe.com"/>
  </foaf:Person>

  <!-- A document with Dublin Core -->
  <dc:Document rdf:about="ex:MyArticle">
    <dc:title>Introduction to RDF and XML</dc:title>
    <dc:creator rdf:resource="ex:JohnDoe"/>
    <dc:date>2024-10-28</dc:date>
  </dc:Document>

  <!-- An article from a blog with Schema.org -->
  <sch:BlogPosting rdf:about="ex:BlogPost1">
    <sch:headline>Exploring RDF with FOAF, Dublin Core, and Schema.org</sch:headline>
    <sch:author rdf:resource="ex:JohnDoe"/>
    <sch:datePublished>2024-10-28</sch:datePublished>
    <sch:about rdf:resource="ex:MyArticle"/>
  </sch:BlogPosting>

</rdf:RDF>
```